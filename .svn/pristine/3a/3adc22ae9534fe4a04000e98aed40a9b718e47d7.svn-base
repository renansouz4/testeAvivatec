package util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;

public class Excel {
	
	public void atualizarPlanilha(String planilha, String TesteCaseId, String statusTest) {
		FileInputStream arquivo = null;
		try {
			arquivo = new FileInputStream(new File(planilha));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		HSSFWorkbook workbook = null;
		try {
			workbook = new HSSFWorkbook(arquivo);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		HSSFSheet sheetAlunos = workbook.getSheetAt(0);
		
		short teste = HSSFColor.RED.index;
		
		if (statusTest.equals("PASSED")) {		
			 teste = HSSFColor.GREEN.index;
		}else {			
			 teste = HSSFColor.RED.index;
	     }
	CellStyle style = workbook.createCellStyle();
	style.setAlignment(HSSFCellStyle.ALIGN_LEFT); // texto centralizado
	style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND); // n√£o sei kk
	style.setFillForegroundColor(teste); // cor de fundo
	style.setBorderBottom(CellStyle.BORDER_THIN); // borda de baixo
	style.setBottomBorderColor(IndexedColors.BLACK.getIndex()); // cor borda baixo
	style.setBorderLeft(CellStyle.BORDER_THIN); // borda da esquerda
	style.setLeftBorderColor(IndexedColors.BLACK.getIndex()); // cor borda esquerda
	style.setBorderRight(CellStyle.BORDER_THIN); // borda direita
	style.setRightBorderColor(IndexedColors.BLACK.getIndex()); // cor borda direita
	style.setBorderTop(CellStyle.BORDER_THIN); // borda de cima
	style.setTopBorderColor(IndexedColors.BLACK.getIndex());	
		
		
		int totallinhas = 1;
		int totalcolunas = sheetAlunos.getRow(0).getPhysicalNumberOfCells();
		
	    System.out.println("linha "+totallinhas+" coluna  "+totalcolunas);

		java.util.Iterator<Row> rowIterator = sheetAlunos.iterator();

		while (rowIterator.hasNext()) {

			Row row = rowIterator.next();
			for (int ii = 0; ii < totallinhas; ii++) {

				int status = ii;
				org.apache.poi.ss.usermodel.Cell celulaAtualCT= row.getCell(ii);
				Row row2 = rowIterator.next();
				status = status+1;
				org.apache.poi.ss.usermodel.Cell celulaAtualSTATUS= row2.getCell(status);
						
			System.out.println(celulaAtualCT.getStringCellValue());
		
				if (celulaAtualCT.getStringCellValue().equals("TEST_CASE_ID")) {
					
					System.out.println("status "+celulaAtualSTATUS.getStringCellValue());
					System.out.println("ct "+celulaAtualCT.getStringCellValue());	
					
					for (int i = 0; i < totalcolunas; i++) {
         				org.apache.poi.ss.usermodel.Cell celulaAtualCTs = row.getCell(i);
						org.apache.poi.ss.usermodel.Cell celulaAtualSTATUSs = row2.getCell(i);

						if (celulaAtualCTs.getStringCellValue().equals(TesteCaseId)) {
							celulaAtualSTATUSs.setCellStyle(style);
							celulaAtualSTATUSs.setCellValue(statusTest);
							FileOutputStream output = null;
							try {
								output = new FileOutputStream(new File((planilha)));
							} catch (FileNotFoundException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							try {
								workbook.write(output);
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							try {
								output.close();
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							return;

						}
					}
				}

			}
		}
		return;

	}
	

}
